今回、分子の構造図からIUPAC名を出力するディープラーニングモデルを作成した。しかし、Blue scoreが0.3と、まだまだ精度が低い。
その改善のために有効な事を考察する。

まず、データ数を増やす。
今回、時間と環境の都合でデータ数をかなり絞り込んだが、データ数をもっと増やすと、精度もそれだけ上昇すると考えられる。
不正解例「n-dichlorophosphinothioylmethanamine」について、
今回のデータセット中、「phosphinothioylmethan」を含むものは２つしか存在しなかった。
そのうちの１つがテストセットに存在していたので、訓練セット中には多くても１つしか存在せず、十分に学習できなかったと考えられる。
データ数が増えれば、この要素を含む分子の数も増えるため、その要素を含む分子の正解確率が上昇するだろう。
このような事は、他にも多く起こっていると推測されるが、それはデータ数を増やす事で解決できると推察される。
PubChemデータベース中、ElementとしてCを含み、リピンスキー・ルールに適合するものは、2018年3月現在で約7000万データ収録されている。
なので、データ数を増やす余地はかなりある。
ただし、データ数を増やすと、それだけデータの処理の手間も上昇する。例えば、今回PubChemから得たデータでも、IUPAC名が入力されていないデータが十数個含まれており、
データセットから除去するのに手間取った。また、最近加えられた分子データには、重水素を含むものがあり、化学的には同じでありながら異なるIUPAC名で登録されている。
今回は、初期にデータベースに加えらえた分子に制限してデータセットを作成したので、そのような特殊なものは含まれていないが、多くのデータを得ようとする場合、
そのような特殊なものの扱いをどうするか、という課題も存在する。
また当然、多くのデータを学習させるには、それだけ時間と計算資源（特にメモリ）を必要とする。
Lesson 5では、9000個のデータセットを学習するようにテキストが組まれていたが、10回程度でメモリーエラーで計算が落ちてしまっていた。
epoch数を多く学習するためには、少数の回数ごとに計算を止めて重みを保存し、一度リセットしてから重みを読み込み直して学習を続ける必要があった。
画像データは、情報の少ない領域のデータを圧縮してデータ量を下げて保存されており、ディープラーニングを行うためにアレイデータに変換すると、データ量が非常に大きくなる。
よって、多数のデータを学習する場合は、様々は工夫を必要とする。
今回は、DL4USの掲示板に書かれていたアイデアを借用し、学習済みCNNモデルにデータセットの画像を読み込ませ、出力したアレイデータを入力として利用する



また、データ拡張でデータ数を水増しする事も有効。
画像においては、データ数が少ない場合、１つの画像を移動や回転、反転させたものも学習データとする事でデータ数を何倍にもする「データ拡張」が行われる。
データ拡張は、データ数を増やすだけでなく、画像の位置や向きに関係のない特徴を学習させることになるため、より分子の特徴を学習させる事ができたと考えられる。
今回は、画像データを学習済みCNNモデルに通して得たアレイデータを入力としたため、学習時に画像データの拡張は行わなかった。しかし、

IUPAC名の形態素分解も要改善。
不正解例「( 1e ) - 1 - bromo buta - 1 , 3 - diene」を「( e ) - 1 - bromo but - 1 - ene」
「ene」の数を間違っている。ただし、本来なら「diene」は「di」と「ene」に分解されるべき。
IUPAC名について、「di」は官能基の数が２つある事を、「tri」は３つある事を意味している。
なので、「di」は「tri」は形態素として分解されているべきだった。
しかし、「di」や「tri」は、他の要素中にも含まれているため、単純な文字列置換で前後にスペースに入れると、要素中に含まれた要素もバラバラにしてしまう可能性があるため、
今回は官能基リストには入れていなかった。「ene」についても同様。よって、「diene」については１つの要素として処理されていたため、学習例が少ない場合、
それが「ene」２つのものと認識されていなかったと予想される。
また、先の「phosphinothioylmethan」の例についても、「phosphino」「thioyl」「methan」と分解されていたなら、それぞれの要素を持つ例で学習されて、
正解される可能性は上昇していたのではないか。
形態素分解は、様々な可能性を考慮し、適当な要素に分解するために、色々な修正が必要である。今回は、開発期間が短期間だったため、「粗い」分解しかできなかったため、
予測の精度に影響したと考えられる。

モデルについて
今回は、画像からの特徴抽出については、学習済みCNNモデルをそのまま利用した。
学習済みモデルはimageNetで学習した重みを用いており、学習データは写真データである。今回の画像は分子構造図であり、より単純な線画となっているため、
写真を元に学習したモデルには、線画を解析するために不要な特徴も数多く含んでいると考えられる。
よって、学習済みモデルを用いる場合も、出力に近い層の重みを再学習してチューニングする「ファインチューニング」を行った方が、精度は上昇すると考えられる。
今回は、学習の効率を上げるため、学習済みモデルに画像を通したアレイデータを入力データとし、CNNモデルは学習モデル部分には含めなかった。
短時間で多くの学習回数を行うため、やむを得なかったが、学習済みCNNモデルも含んだ学習モデルを作成し、順次、CNN層もチューニングしていけば、
より精度の高いモデルを作成できたと考えられる。
その場合は、学習データを分割してその都度重みを保存するなど、時間をかけて学習させる必要がある。

また、学習済みモデルを用いた予測モデルについても、今回はビームサーチを実装できなかったが、ビームサーチを用いれば、より精度の高い予測モデルができると考えられる。

以上のように、改善点はたくさんあるが、短期間で開発した初期モデルとしては、それなりに動くものになっている。
まず、出力されたIUPAC名は、それなりにIUPAC名らしきものにはなっている。
カッコに対しては閉じカッコが後に存在しており、数字のあとにはハイフンが存在しているなど、明らかにおかしいものは出力されなかった。
また、間違っているものについても、非常に近い要素のものを予測していた。
例えば、「diene」を「ene」と予測していた上記の例では、官能基の数が異なっていたが、全く異なるものを予測していた訳ではなかった。
「phosphinothioylmethan」は「phosphorylmethan」と間違っていたが、リンとメタンを含むところは共通していた。
他にも、数字が異なっている（つまり、官能基の付いている場所が異なっている）だけのものや、官能基が一部抜けているだけであるなど、
Blue scoreの値の低さほど悲観する結果ではないと考えている。
逆に、この程度の開発で、ここまで「まとも」なモデルが作成された事は驚異的で、ディープラーニングによる画像の特徴認識は、
相当な可能性を持っている事が再認識できた。




